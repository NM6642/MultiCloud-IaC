name: Terraform DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  security_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Run tfsec scan
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          soft_fail: true

  terraform_plan_apply:
    runs-on: ubuntu-latest
    needs: security_scan
    if: github.event_name == 'push'
    env:
      # ---- Provider creds (read by AWS/Azure providers) ----
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION:    ${{ secrets.AWS_DEFAULT_REGION }}

      ARM_SUBSCRIPTION_ID:   ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID:         ${{ secrets.ARM_TENANT_ID }}
      ARM_CLIENT_ID:         ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET:     ${{ secrets.ARM_CLIENT_SECRET }}

      # ---- Terraform input variables (match variables.tf) ----
      TF_VAR_aws_region:            ${{ secrets.AWS_DEFAULT_REGION }}
      TF_VAR_aws_access_key:        ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key:        ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_instance_type:     t3.micro
      TF_VAR_aws_ami_id:            ami-0914547665e6a707c

      TF_VAR_azure_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_azure_client_id:       ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_azure_client_secret:   ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_azure_tenant_id:       ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_azure_location:        East US
      TF_VAR_azure_vm_size:         Standard_B1s
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: terraform init -input=false
      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -input=false -auto-approve tfplan
